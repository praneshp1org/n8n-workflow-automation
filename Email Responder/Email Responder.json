{
  "name": "Email Responder",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -240,
        0
      ],
      "id": "7a81950e-d411-4744-963a-410f39363fea",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "wPwQfA4TpKYT4vfa",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "134d57e7-25e2-466a-ada3-9969a75a5b35",
              "name": "emailContent",
              "value": "=Sender: \n{{ $json.from.value[0].address }}\n\nSubject: \n{{ $json.subject }}\n\nMessage: \n{{ $json.text }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -32,
        0
      ],
      "id": "cbf14a1e-652c-4c90-88f9-1161980fdf2b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an sponsorship email classifier. Whenever I receive email, you need to classify if it is either related to sponsor related to my brand or not. If yes, return the isSponsor true.\n\nFOllow the following guidelines when doing that:\n- return isSponsor boolen\n- reasoning for that decision.\n- lead name, the person who is emailing me that info maybe in the body. Leave empty if not present.\n- the company name, the company he is representing. Leave empty if not\n\nReasoning shouldnt be more than 1 line. JUst say what it is realted to. Thats it.\n\nemailContext:\n{{ $json.emailContent }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        176,
        0
      ],
      "id": "6528ec4b-8d60-488e-8430-e52144c06b49",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        128,
        144
      ],
      "id": "27a0abfa-3671-4358-864c-888b676b8356",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "5zjScWlzOQBYW1Am",
          "name": "Working"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"isSponsorship\": {\n\t\t\t\"type\": \"boolean\"\n\t\t},\n      \"name\":{\n        \"type\": \"String\"\n      },\n      \"company\":{\n        \"type\": \"String\"\n      },\n\t\t\"reasoning\": {\n\t\t\t\"type\": \"String\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        352,
        208
      ],
      "id": "14a70df1-6784-4946-9994-b8637d240074",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fa0af80c-6475-4f39-8723-0e90f0966b70",
              "leftValue": "={{ $json.output.isSponsorship }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        528,
        16
      ],
      "id": "d8f179db-20d1-4069-b2e4-662932e8cb0c",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        720,
        176
      ],
      "id": "2c692d94-68dc-4f0f-8c38-327b782e5b8d",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appLdWehL6NYdUq5o",
          "mode": "list",
          "cachedResultName": "Sponsors",
          "cachedResultUrl": "https://airtable.com/appLdWehL6NYdUq5o"
        },
        "table": {
          "__rl": true,
          "value": "tblJPHN8e9SYwBKMc",
          "mode": "list",
          "cachedResultName": "Sponsors",
          "cachedResultUrl": "https://airtable.com/appLdWehL6NYdUq5o/tblJPHN8e9SYwBKMc"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email": "={{ $('Gmail Trigger').item.json.headers.from }}",
            "Reasoning": "={{ $json.output.reasoning }}",
            "Name": "={{ $json.output.name }}",
            "Company": "={{ $json.output.company }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Company",
              "displayName": "Company",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Reasoning",
              "displayName": "Reasoning",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        768,
        16
      ],
      "id": "756ab97a-c902-421e-9374-5a6321d2478a",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "49d9TRqB13Ci6trK",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=Draft a concise email response to a sponsorship opportunity. The email should express gratitude, show enthusiasm for a potential partnership, request more details about expectations and benefits, and propose next steps for collaboration. Keep the tone professional yet warm, and include placeholders for the sender’s and recipient’s names, organization, and position.\n\nMake the response human and limit to 100 words at max. Address the user by the name: {{ $json.fields.Name }} and his context of message is:\n{{ $('Edit Fields').item.json.emailContent }}\n\nReply according to the context.\n\nAnd dont include subject here! Dont include too much new lines, it makes it AI generated.",
              "role": "model"
            },
            {
              "content": "=EMAIL CONTEXT:\n {{ $('Edit Fields').item.json.emailContent }}",
              "role": "=user"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        976,
        48
      ],
      "id": "e1a456c0-aeff-4db4-9b48-d75e238b4d67",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "5zjScWlzOQBYW1Am",
          "name": "Working"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "emailType": "text",
        "message": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1280,
        48
      ],
      "id": "94fff178-43f7-44d0-9e9a-f2b2d4b8d17e",
      "name": "Reply to a message",
      "webhookId": "c1064440-5778-41c4-8e74-8ae4de46d0a5",
      "credentials": {
        "gmailOAuth2": {
          "id": "wPwQfA4TpKYT4vfa",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a record": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Reply to a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5631a57f-44e5-4109-9897-972c83610dcf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d17a32a5573f8a873db5565e71ff4e557990cba8840eaed991a6c563ef3fed6c"
  },
  "id": "QYQ1Assm696TkxHw",
  "tags": []
}